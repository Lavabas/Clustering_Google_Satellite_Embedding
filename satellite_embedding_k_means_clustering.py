# -*- coding: utf-8 -*-
"""Satellite Embedding - K-means Clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tz50Q2M_NnQo09VG4vaTWENv8CF7PmM0
"""

import ee
import geemap
import xarray as xr
!pip install xee
import xee
!pip install rioxarray
import rioxarray

ee.Authenticate()
ee.Initialize(
    project = 'ee-lavibas23',
    opt_url = 'https://earthengine-highvolume.googleapis.com'
)

map = geemap.Map(basemap = 'SATELLITE')
map

roi = map.draw_last_feature.geometry()

roi

image = (
    ee.ImageCollection("GOOGLE/SATELLITE_EMBEDDING/V1/ANNUAL")
    .filterDate('2021','2022')
    .filterBounds(roi)
    .mosaic()
)

image

ds = xr.open_dataset(
    image,
    engine = 'ee',
    crs = 'EPSG:4326',
    scale = 0.0001,
    geometry = roi
)

ds.A01.plot(
    x = 'lon',
    y = 'lat',
    robust = True
)

df = ds.to_dataframe()

df

from sklearn.cluster import KMeans

model = KMeans(n_clusters = 7, random_state = 42)
model.fit(df)

df['cluster'] = model.predict(df)

dx = df.to_xarray().sortby(['lat','lon'])

dx.cluster.plot(
    x = 'lon',
    y = 'lat',
    vmin = 0,
    vmax = 6
)

output = dx.cluster.isel(time = 0).drop_vars('time')
output = output.rio.write_crs('EPSG:4326', inplace = True)
output = output.rio.set_spatial_dims(x_dim = 'lon', y_dim = 'lat', inplace = True)
output = output.rio.write_coordinate_system(inplace = True)
output = output.transpose('lat', 'lon')
output.rio.to_raster('embedding_cluster.tif')